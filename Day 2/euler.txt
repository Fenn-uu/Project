30397485.0
Wrote profile results to euler.py.lprof
Timer unit: 1e-06 s

Total time: 0.00476 s
File: euler.py
Function: gen_primes at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def gen_primes(n):
    13         1          2.0      2.0      0.0      l = range(2,n)
    14         1          1.0      1.0      0.0      primes = []
    15       999        286.0      0.3      6.0      for j in range(0,len(l)):
    16       998        290.0      0.3      6.1          p = True
    17      2968        801.0      0.3     16.8          for d in primes:
    18      2967       1364.0      0.5     28.7              if(d > sqrt(l[j])):
    19       167         43.0      0.3      0.9                  break
    20      2800       1152.0      0.4     24.2              if(l[j] % d == 0):
    21       830        231.0      0.3      4.9                  p = False
    22       830        237.0      0.3      5.0                  break;
    23       998        284.0      0.3      6.0          if(p):
    24       168         69.0      0.4      1.4              primes.append(l[j])
    25                                           
    26         1          0.0      0.0      0.0      return primes

Total time: 0.119354 s
File: euler.py
Function: factorize at line 28

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    28                                           @profile
    29                                           def factorize(n,primes):
    30      9999       2555.0      0.3      2.1      factors = []
    31      9999       2398.0      0.2      2.0      init_n = n
    32     96347      23071.0      0.2     19.3      for p in primes:
    33    118736      37105.0      0.3     31.1          while(n%p == 0):
    34     22389       5944.0      0.3      5.0              n = n/p
    35     22389       6640.0      0.3      5.6              factors.append(p)
    36     96347      31167.0      0.3     26.1          if(p > sqrt(n)):
    37      9999       2435.0      0.2      2.0              break
    38      9999       2902.0      0.3      2.4      if(n > 1):
    39      9596       2885.0      0.3      2.4          factors.append(n)
    40      9999       2252.0      0.2      1.9      return factors

Total time: 0.250705 s
File: euler.py
Function: fast_phi at line 57

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    57                                           @profile
    58                                           def fast_phi(n,primes):
    59      9999     218717.0     21.9     87.2      factors = factorize(n,primes)
    60      9999       3003.0      0.3      1.2      phi = factors[0]-1
    61     31985      10356.0      0.3      4.1      for i in range(1,len(factors)):
    62     21986       7901.0      0.4      3.2          if(factors[i] == factors[i-1]):
    63      7685       3619.0      0.5      1.4              phi *= (factors[i]-1)*(factors[i])/(factors[i]-1)
    64                                                   else:
    65     14301       4815.0      0.3      1.9              phi *= (factors[i]-1)
    66      9999       2294.0      0.2      0.9      return phi

